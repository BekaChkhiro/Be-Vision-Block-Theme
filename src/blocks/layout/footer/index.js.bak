import { useBlockProps, RichText, InspectorControls, MediaUpload } from '@wordpress/block-editor';
import { PanelBody, ColorPalette, Button, RangeControl, TextControl } from '@wordpress/components';
import { registerCustomBlock } from '../../../utils/block-utils';

const settings = {
    title: 'Footer Section',
    icon: 'align-wide',
    attributes: {
        backgroundColor: {
            type: 'string',
            default: '#EFF1F5'
        },
        textColor: {
            type: 'string',
            default: '#666666'
        },
        logo: {
            type: 'string',
            default: ''
        },
        logoHeight: {
            type: 'number',
            default: 30
        },
        phone: {
            type: 'string',
            default: '593 255 385'
        },
        email: {
            type: 'string',
            default: 'info@bvision.ge'
        },
        address: {
            type: 'string',
            default: '40 Juli shartava street, Tbilisi, Georgia (0160)'
        },
        copyright: {
            type: 'string',
            default: ' BIVISION 2025'
        },
        privacyPolicy: {
            type: 'string',
            default: 'Privacy policy'
        }
    },
    edit: ({ attributes, setAttributes }) => {
        const { backgroundColor, textColor, logo, logoHeight, phone, email, address, copyright, privacyPolicy } = attributes;
        const blockProps = useBlockProps();

        return (
            <div {...blockProps}>
                <InspectorControls>
                    <PanelBody title="Footer Settings">
                        <div>
                            <p>Background Color</p>
                            <ColorPalette
                                value={backgroundColor}
                                onChange={(color) => setAttributes({ backgroundColor: color })}
                            />
                        </div>
                        <div>
                            <p>Text Color</p>
                            <ColorPalette
                                value={textColor}
                                onChange={(color) => setAttributes({ textColor: color })}
                            />
                        </div>
                        <RangeControl
                            label="Logo Height"
                            value={logoHeight}
                            onChange={(value) => setAttributes({ logoHeight: value })}
                            min={20}
                            max={100}
                        />
                        <MediaUpload
                            onSelect={(media) => setAttributes({ logo: media.url })}
                            type="image"
                            render={({ open }) => (
                                <Button onClick={open} variant="secondary">
                                    {logo ? 'Change Logo' : 'Upload Logo'}
                                </Button>
                            )}
                        />
                        <TextControl
                            label="Phone Number"
                            value={phone}
                            onChange={(value) => setAttributes({ phone: value })}
                        />
                        <TextControl
                            label="Email"
                            value={email}
                            onChange={(value) => setAttributes({ email: value })}
                        />
                        <TextControl
                            label="Address"
                            value={address}
                            onChange={(value) => setAttributes({ address: value })}
                        />
                    </PanelBody>
                </InspectorControls>

                <footer style={{ backgroundColor: backgroundColor }}>
                    <div style={{ 
                        maxWidth: '1250px',
                        margin: '0 auto',
                        padding: '40px 20px'
                    }}>
                        <div style={{
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'space-between',
                            flexWrap: 'wrap',
                            marginBottom: '30px',
                            gap: '20px'
                        }}>
                            <div>
                                {logo && (
                                    <img 
                                        src={logo} 
                                        alt="B'VISION"
                                        style={{ height: logoHeight + 'px', width: 'auto' }}
                                    />
                                )}
                            </div>
                            <div style={{
                                display: 'flex',
                                gap: '30px',
                                color: textColor
                            }}>
                                <RichText
                                    tagName="a"
                                    value={phone}
                                    onChange={(value) => setAttributes({ phone: value })}
                                    style={{ textDecoration: 'none', color: 'inherit' }}
                                />
                                <RichText
                                    tagName="a"
                                    value={email}
                                    onChange={(value) => setAttributes({ email: value })}
                                    style={{ textDecoration: 'none', color: 'inherit' }}
                                />
                            </div>
                            <RichText
                                tagName="div"
                                value={address}
                                onChange={(value) => setAttributes({ address: value })}
                                style={{ color: textColor }}
                            />
                            <div style={{ display: 'flex', gap: '15px' }}>
                                <a href="#" style={{ 
                                    width: '24px',
                                    height: '24px',
                                    opacity: 0.7,
                                    transition: 'opacity 0.3s'
                                }}>
                                    <svg viewBox="0 0 24 24" fill={textColor}>
                                        <path d="M12 2C6.477 2 2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.879V14.89h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.989C18.343 21.129 22 16.99 22 12c0-5.523-4.477-10-10-10z"/>
                                    </svg>
                                </a>
                                <a href="#" style={{ 
                                    width: '24px',
                                    height: '24px',
                                    opacity: 0.7,
                                    transition: 'opacity 0.3s'
                                }}>
                                    <svg viewBox="0 0 24 24" fill={textColor}>
                                        <path d="M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.68 1.68 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z"/>
                                    </svg>
                                </a>
                            </div>
                        </div>
                        <div style={{
                            display: 'flex',
                            justifyContent: 'space-between',
                            alignItems: 'center',
                            paddingTop: '20px',
                            borderTop: '1px solid rgba(0, 0, 0, 0.1)'
                        }}>
                            <RichText
                                tagName="div"
                                value={copyright}
                                onChange={(value) => setAttributes({ copyright: value })}
                                style={{ color: textColor, fontSize: '14px' }}
                            />
                            <RichText
                                tagName="a"
                                value={privacyPolicy}
                                onChange={(value) => setAttributes({ privacyPolicy: value })}
                                style={{ 
                                    color: textColor,
                                    textDecoration: 'none',
                                    fontSize: '14px'
                                }}
                            />
                        </div>
                    </div>
                </footer>
            </div>
        );
    },

    save: ({ attributes }) => {
        const { backgroundColor, textColor, logo, logoHeight, phone, email, address, copyright, privacyPolicy } = attributes;
        const blockProps = useBlockProps.save();

        return (
            <div {...blockProps}>
                <footer style={{ backgroundColor: backgroundColor }}>
                    <div style={{ 
                        maxWidth: '1250px',
                        margin: '120px auto 0px',
                        padding: '40px 20px'
                    }}>
                        <div style={{
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'space-between',
                            flexWrap: 'wrap',
                            marginBottom: '30px',
                            gap: '20px'
                        }}>
                            <div>
                                {logo && (
                                    <img 
                                        src={logo} 
                                        alt="B'VISION"
                                        style={{ height: logoHeight + 'px', width: 'auto' }}
                                    />
                                )}
                            </div>
                            <div style={{
                                display: 'flex',
                                gap: '30px',
                                color: textColor
                            }}>
                                <a href={`tel:${phone}`} style={{ textDecoration: 'none', color: 'inherit' }}>
                                    <RichText.Content value={phone} />
                                </a>
                                <a href={`mailto:${email}`} style={{ textDecoration: 'none', color: 'inherit' }}>
                                    <RichText.Content value={email} />
                                </a>
                            </div>
                            <div style={{ color: textColor }}>
                                <a href="https://www.google.com/maps/search/?api=1&query=40+Juli+shartava+street+Tbilisi+Georgia" target="_blank" rel="noopener noreferrer" style={{ textDecoration: 'none', color: 'inherit' }}>
                                    <RichText.Content value={address} />
                                </a>
                            </div>
                            <div style={{ display: 'flex', gap: '15px' }}>
                                <a href="#" style={{ 
                                    width: '24px',
                                    height: '24px',
                                    opacity: 0.7,
                                    transition: 'opacity 0.3s'
                                }}>
                                    <svg viewBox="0 0 24 24" fill={textColor}>
                                        <path d="M12 2C6.477 2 2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.879V14.89h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.989C18.343 21.129 22 16.99 22 12c0-5.523-4.477-10-10-10z"/>
                                    </svg>
                                </a>
                                <a href="#" style={{ 
                                    width: '24px',
                                    height: '24px',
                                    opacity: 0.7,
                                    transition: 'opacity 0.3s'
                                }}>
                                    <svg viewBox="0 0 24 24" fill={textColor}>
                                        <path d="M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.68 1.68 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z"/>
                                    </svg>
                                </a>
                            </div>
                        </div>
                        <div style={{
                            display: 'flex',
                            justifyContent: 'space-between',
                            alignItems: 'center',
                            paddingTop: '20px',
                            borderTop: '1px solid rgba(0, 0, 0, 0.1)'
                        }}>
                            <div style={{ color: textColor, fontSize: '14px' }}>
                                <RichText.Content value={copyright} />
                            </div>
                            <a href="/privacy-policy" style={{ 
                                color: textColor,
                                textDecoration: 'none',
                                fontSize: '14px'
                            }}>
                                <RichText.Content value={privacyPolicy} />
                            </a>
                        </div>
                    </div>
                </footer>
            </div>
        );
    }
};

registerCustomBlock('footer-section', settings);
